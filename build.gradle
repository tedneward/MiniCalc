plugins {
    // Apply the Kotlin JVM plugin to add support for Kotlin.
    id 'org.jetbrains.kotlin.jvm' version '1.3.71'

    id 'antlr'

    // Apply the application plugin to add support for building a CLI application.
    id 'application'
}

repositories {
    // Use jcenter for resolving dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
}

dependencies {
    // Align versions of all Kotlin components
    implementation platform('org.jetbrains.kotlin:kotlin-bom')
    implementation 'org.jetbrains.kotlin:kotlin-stdlib-jdk8'
    implementation "org.jetbrains.kotlin:kotlin-reflect"
    testImplementation 'org.jetbrains.kotlin:kotlin-test'
    testImplementation 'org.jetbrains.kotlin:kotlin-test-junit'

    antlr "org.antlr:antlr4:4.7.1"
    compile "org.antlr:antlr4-runtime:4.7.1"
}

configurations {
    compile {
        extendsFrom = extendsFrom.findAll { it != configurations.antlr }
    }
}

generateGrammarSource {
    arguments += ["-package", "com.tedneward.minicalc"]
    maxHeapSize = "64m"
    outputDirectory = new File("generated-src/main/java/com/tedneward/minicalc")
}

compileKotlin.dependsOn generateGrammarSource
sourceSets {
    generated {
        java.srcDir 'generated-src/main/java'
    }
}
compileJava.source sourceSets.generated.java
compileKotlin.source sourceSets.generated.java, sourceSets.main.kotlin

clean.doLast {
    file('generated-src').deleteDir()
}

application {
    // Define the main class for the application.
    mainClassName = 'com.tedneward.minicalc.AppKt'
}
